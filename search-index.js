var searchIndex = JSON.parse('{\
"twm_core":{"doc":"","i":[[8,"DynClone","twm_core","This trait is implemented by any type that implements…",null,null],[0,"bbox","","Bounding boxes are used to hold the position and size of…",null,null],[3,"HorizontalSplit","twm_core::bbox","The result of an horizontal split.",null,null],[3,"VerticalSplit","","The result of an vertical split.",null,null],[3,"BBox","","A bounding box.",null,null],[12,"x","","The x-position of the bounding box.",0,null],[12,"y","","The y-position of the bounding box.",0,null],[12,"width","","The width of the bounding box.",0,null],[12,"height","","The height of the bounding box.",0,null],[3,"BBoxBuilder","","A builder for creating bounding boxes.",null,null],[4,"SplitDirection","","The direction a split can occur.",null,null],[13,"Horizontal","","A horizontal split splits a bounding box into an `upper`…",1,null],[13,"Vertical","","A vertical split splits a bounding box into a `left` and…",1,null],[11,"new","","Creates an empty `HorizontalSplit`.",2,[[]]],[11,"with","","Creates a `HorizontalSplit` holding the given `upper` and…",2,[[["bbox",3]]]],[11,"upper","","Returns the upper bounding box.",2,[[],["bbox",3]]],[11,"lower","","Returns the lower bounding box.",2,[[],["bbox",3]]],[11,"new","","Creates an empty vertical split.",3,[[]]],[11,"with","","Creates a `HorizontalSplit` holding the given `left` and…",3,[[["bbox",3]]]],[11,"left","","Returns the left bounding box.",3,[[],["bbox",3]]],[11,"right","","Returns the right bounding box.",3,[[],["bbox",3]]],[11,"new","","Creates an empty bounding box.",0,[[]]],[11,"with","","Creates a new bounding box with specific values.",0,[[]]],[11,"equal_split","","Equally splits the surface area of a bounding box,…",0,[[["splitdirection",4],["bbox",3]],[["vec",3],["bbox",3]]]],[11,"horizontal_split","","Splits the current bounding box horizontally and returns…",0,[[],["horizontalsplit",3]]],[11,"vertical_split","","Splits the current bounding box vertically and returns the…",0,[[],["verticalsplit",3]]],[11,"new","","Creates an empty builder.",4,[[]]],[11,"from","","Creates a new builder and pre-populates the fields using…",4,[[["bbox",3]]]],[11,"x","","Sets the x-position.",4,[[]]],[11,"y","","Sets the y-position.",4,[[]]],[11,"height","","Sets the height value.",4,[[]]],[11,"width","","Sets the width value.",4,[[]]],[11,"build","","Creates a bounding box and consuming the builder.",4,[[],["bbox",3]]],[0,"config","twm_core","",null,null],[5,"parse","twm_core::config","Reads and parses the config file at a given path.",null,[[],[["result",6],["deserializeowned",8]]]],[5,"config_file_path","","Returns the config file path.",null,[[],[["pathbuf",3],["option",4]]]],[0,"display","twm_core","",null,null],[3,"Display","twm_core::display","A display represents a monitor of an user. These can…",null,null],[12,"id","","The unique id of the display.",5,null],[12,"bbox","","The bounding box of the display.",5,null],[6,"DisplayId","","A display id.",null,null],[11,"new","","Creates an empty display.",5,[[]]],[11,"with","","Creates a new display with specific values.",5,[[["displayid",6],["bbox",3]]]],[0,"layout","twm_core","A layout is responsible for laying out tiles inside a…",null,null],[8,"DynClone","twm_core::layout","This trait is implemented by any type that implements…",null,null],[3,"LayoutMeta","","Metadata associated with a layout.",null,null],[12,"name","","The name of the layout. This should be a human-readable…",6,null],[3,"LayoutUpdateInfo","","The information needed to update tiles inside a workspace.",null,null],[12,"tiles","","A mutable list of all tiles.",7,null],[12,"workspace_bbox","","The bounding box of the workspace. Tiles should only be…",7,null],[0,"middle_layout","","",null,null],[3,"MiddleLayout","twm_core::layout::middle_layout","",null,null],[0,"sided_layout","twm_core::layout","A sided layout uses have of the workspace\'s bounding box…",null,null],[3,"SidedLayout","twm_core::layout::sided_layout","A sided layout implementation.",null,null],[12,"side","","The side that the focused tile is rendered to.",8,null],[11,"new","","Creates a default `SidedLayout`.",8,[[]]],[11,"with","","Creates a `SidedLayout`.",8,[[["direction",4]]]],[8,"Layout","twm_core::layout","A layout.",null,null],[10,"metadata","","Returns the metadata of the layout.",9,[[],["layoutmeta",3]]],[10,"invalidate","","Invalidates the layout and makes re-calculations possible.",9,[[]]],[10,"is_dirty","","Returns whether the layout is dirty or not. Dirty layouts…",9,[[]]],[10,"layout","","Lays out tiles by changing their bbox.",9,[[["layoutupdateinfo",3]]]],[0,"manager","twm_core","The `Manager` is responsible for managing all workspaces…",null,null],[3,"Manager","twm_core::manager","A manager.",null,null],[12,"focused_workspace_id","","The id of the focused `Workspace`. `None` if no…",10,null],[12,"workspaces","","The list of workspaces.",10,null],[11,"new","","Creates a default manager.",10,[[]]],[11,"with","","Creates a manager.",10,[[["vec",3],["workspace",3]]]],[11,"focused_workspace","","Returns a reference to the focused workspace.",10,[[],[["workspace",3],["option",4]]]],[11,"focused_workspace_mut","","Returns a mutable reference to the focused workspace.",10,[[],[["workspace",3],["option",4]]]],[0,"tile","twm_core","Tiles are used to move around and resize windows inside a…",null,null],[3,"Tile","twm_core::tile","A tile inside a workspace.",null,null],[12,"id","","The unique id of the tile.",11,null],[12,"bbox","","The bounding box of the tile.",11,null],[12,"window","","The window this tile displays.",11,null],[6,"TileId","","The unique id of a tile.",null,null],[11,"new","","Creates an empty tile.",11,[[]]],[11,"with","","Creates a tile.",11,[[["window",3],["tileid",6],["bbox",3]]]],[0,"util","twm_core","Contains model-independent enums, structs and traits.",null,null],[4,"Direction","twm_core::util","A general direction.",null,null],[13,"Left","","",12,null],[13,"Right","","",12,null],[13,"Up","","",12,null],[13,"Down","","",12,null],[0,"window","twm_core","Windows are used to represent running programs of a user.",null,null],[3,"Window","twm_core::window","A window.",null,null],[12,"id","","The unique id of a window.",13,null],[12,"handle","","The OS\' window handle.",13,null],[12,"original_bbox","","The original bounding box of the window before resizing it…",13,null],[6,"WindowId","","A window id.",null,null],[6,"WindowHandle","","A window handle.",null,null],[11,"new","","Creates an empty window.",13,[[]]],[11,"with","","Creates a window.",13,[[["windowid",6],["windowhandle",6],["bbox",3]]]],[0,"workspace","twm_core","",null,null],[3,"Workspace","twm_core::workspace","A workspace keeps track of all tiles and the currently…",null,null],[12,"id","","The unique id.",14,null],[12,"display","","The display the workspace is in.",14,null],[12,"layout","","The currently active layout.",14,null],[12,"focused_tile_id","","The id of the focused tile. If `None`, no tile is focused.",14,null],[6,"WorkspaceId","","A workspace id.",null,null],[11,"new","","Creates a new default `Workspace`.",14,[[]]],[11,"with","","Creates a workspace.",14,[[["display",3],["workspaceid",6]]]],[11,"layout","","Lays out all the tiles inside the workspace.",14,[[]]],[11,"add_tile","","Adds a new tile to the workspace and focuses it.",14,[[["tile",3]]]],[11,"remove_tile","","Removes a tile from the workspace.",14,[[["tile",3]]]],[11,"remove_tile_by_id","","Removes a tile with a given id from the workspace.",14,[[["tileid",6]]]],[11,"tiles","","Returns a reference of all tiles inside the workspace.",14,[[],["vec",3]]],[11,"tiles_mut","","Returns a mutable reference of all tiles inside the…",14,[[],["vec",3]]],[11,"focused_tile","","Returns a reference of the focused tile.",14,[[],[["option",4],["tile",3]]]],[11,"focused_tile_mut","","Returns a mutable reference of the focused tile.",14,[[],[["option",4],["tile",3]]]],[11,"tile_by_id","","Returns a reference to a tile given by its id.",14,[[["tileid",6]],[["option",4],["tile",3]]]],[11,"tile_by_id_mut","","Returns a mutable reference to a tile given by its id.",14,[[["tileid",6]],[["option",4],["tile",3]]]],[11,"iter","","Returns an `Iterator` over all tiles inside this workspace.",14,[[],[["tile",3],["iter",3]]]],[11,"iter_mut","","Returns a mutable `Iterator` over all tiles inside this…",14,[[],[["tile",3],["itermut",3]]]],[11,"from","twm_core::bbox","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"clone_box","","",2,[[]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"clone_box","","",3,[[]]],[11,"erased_serialize","","",3,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"vzip","","",3,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone_box","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"vzip","","",0,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"clone_box","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone_box","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"vzip","","",1,[[]]],[11,"from","twm_core::display","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"clone_box","","",5,[[]]],[11,"erased_serialize","","",5,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"vzip","","",5,[[]]],[11,"from","twm_core::layout","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"clone_box","","",6,[[]]],[11,"erased_serialize","","",6,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"erased_serialize","","",7,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"vzip","","",7,[[]]],[11,"from","twm_core::layout::middle_layout","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"clone_box","","",15,[[]]],[11,"erased_serialize","","",15,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"vzip","","",15,[[]]],[11,"from","twm_core::layout::sided_layout","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"clone_box","","",8,[[]]],[11,"erased_serialize","","",8,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"vzip","","",8,[[]]],[11,"from","twm_core::manager","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"clone_box","","",10,[[]]],[11,"vzip","","",10,[[]]],[11,"from","twm_core::tile","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"clone_box","","",11,[[]]],[11,"erased_serialize","","",11,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"vzip","","",11,[[]]],[11,"from","twm_core::util","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"clone_box","","",12,[[]]],[11,"erased_serialize","","",12,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"vzip","","",12,[[]]],[11,"from","twm_core::window","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"clone_box","","",13,[[]]],[11,"erased_serialize","","",13,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"vzip","","",13,[[]]],[11,"from","twm_core::workspace","",14,[[]]],[11,"into","","",14,[[]]],[11,"into_iter","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"clone_box","","",14,[[]]],[11,"erased_serialize","","",14,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"vzip","","",14,[[]]],[11,"metadata","twm_core::layout::middle_layout","",15,[[],["layoutmeta",3]]],[11,"invalidate","","",15,[[]]],[11,"is_dirty","","",15,[[]]],[11,"layout","","",15,[[["layoutupdateinfo",3]]]],[11,"metadata","twm_core::layout::sided_layout","",8,[[],["layoutmeta",3]]],[11,"invalidate","","",8,[[]]],[11,"is_dirty","","",8,[[]]],[11,"layout","","",8,[[["layoutupdateinfo",3]]]],[11,"into_iter","twm_core::workspace","",14,[[]]],[11,"clone","twm_core::bbox","",2,[[],["horizontalsplit",3]]],[11,"clone","","",3,[[],["verticalsplit",3]]],[11,"clone","","",0,[[],["bbox",3]]],[11,"clone","","",4,[[],["bboxbuilder",3]]],[11,"clone","","",1,[[],["splitdirection",4]]],[11,"clone","twm_core::display","",5,[[],["display",3]]],[11,"clone","twm_core::layout::middle_layout","",15,[[],["middlelayout",3]]],[11,"clone","twm_core::layout::sided_layout","",8,[[],["sidedlayout",3]]],[11,"clone","twm_core::layout","",6,[[],["layoutmeta",3]]],[11,"clone","twm_core::manager","",10,[[],["manager",3]]],[11,"clone","twm_core::tile","",11,[[],["tile",3]]],[11,"clone","twm_core::util","",12,[[],["direction",4]]],[11,"clone","twm_core::window","",13,[[],["window",3]]],[11,"clone","twm_core::workspace","",14,[[],["workspace",3]]],[11,"default","twm_core::bbox","",2,[[],["horizontalsplit",3]]],[11,"default","","",3,[[],["verticalsplit",3]]],[11,"default","","",0,[[],["bbox",3]]],[11,"default","","",4,[[],["bboxbuilder",3]]],[11,"default","","Returns the default split direction (Horizontal).",1,[[]]],[11,"default","twm_core::display","",5,[[],["display",3]]],[11,"default","twm_core::layout::middle_layout","",15,[[],["middlelayout",3]]],[11,"default","twm_core::layout::sided_layout","",8,[[],["sidedlayout",3]]],[11,"default","twm_core::manager","",10,[[],["manager",3]]],[11,"default","twm_core::tile","",11,[[],["tile",3]]],[11,"default","twm_core::util","Returns the default direction (Left).",12,[[]]],[11,"default","twm_core::window","",13,[[],["window",3]]],[11,"default","twm_core::workspace","Returns a default instance.",14,[[]]],[11,"eq","twm_core::bbox","",2,[[["horizontalsplit",3]]]],[11,"ne","","",2,[[["horizontalsplit",3]]]],[11,"eq","","",3,[[["verticalsplit",3]]]],[11,"ne","","",3,[[["verticalsplit",3]]]],[11,"eq","","",0,[[["bbox",3]]]],[11,"ne","","",0,[[["bbox",3]]]],[11,"eq","","",4,[[["bboxbuilder",3]]]],[11,"ne","","",4,[[["bboxbuilder",3]]]],[11,"eq","","",1,[[["splitdirection",4]]]],[11,"eq","twm_core::display","",5,[[["display",3]]]],[11,"ne","","",5,[[["display",3]]]],[11,"eq","twm_core::layout::middle_layout","",15,[[["middlelayout",3]]]],[11,"ne","","",15,[[["middlelayout",3]]]],[11,"eq","twm_core::layout::sided_layout","",8,[[["sidedlayout",3]]]],[11,"ne","","",8,[[["sidedlayout",3]]]],[11,"eq","twm_core::layout","",6,[[["layoutmeta",3]]]],[11,"ne","","",6,[[["layoutmeta",3]]]],[11,"eq","","",7,[[["layoutupdateinfo",3]]]],[11,"ne","","",7,[[["layoutupdateinfo",3]]]],[11,"eq","twm_core::tile","",11,[[["tile",3]]]],[11,"ne","","",11,[[["tile",3]]]],[11,"eq","twm_core::util","",12,[[["direction",4]]]],[11,"eq","twm_core::window","",13,[[["window",3]]]],[11,"ne","","",13,[[["window",3]]]],[11,"fmt","twm_core::bbox","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","twm_core::display","",5,[[["formatter",3]],["result",6]]],[11,"fmt","twm_core::layout::middle_layout","",15,[[["formatter",3]],["result",6]]],[11,"fmt","twm_core::layout::sided_layout","",8,[[["formatter",3]],["result",6]]],[11,"fmt","twm_core::layout","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","twm_core::manager","",10,[[["formatter",3]],["result",6]]],[11,"fmt","twm_core::tile","",11,[[["formatter",3]],["result",6]]],[11,"fmt","twm_core::util","",12,[[["formatter",3]],["result",6]]],[11,"fmt","twm_core::window","",13,[[["formatter",3]],["result",6]]],[11,"fmt","twm_core::workspace","",14,[[["formatter",3]],["result",6]]],[11,"fmt","twm_core::bbox","Prints the bounding box as a human-readable string. The…",0,[[["formatter",3]],["result",6]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",1,[[]]],[11,"hash","twm_core::display","",5,[[]]],[11,"hash","twm_core::layout::middle_layout","",15,[[]]],[11,"hash","twm_core::layout::sided_layout","",8,[[]]],[11,"hash","twm_core::layout","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","twm_core::tile","",11,[[]]],[11,"hash","twm_core::util","",12,[[]]],[11,"hash","twm_core::window","",13,[[]]],[11,"serialize","twm_core::bbox","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","twm_core::display","",5,[[],["result",4]]],[11,"serialize","twm_core::layout::middle_layout","",15,[[],["result",4]]],[11,"serialize","twm_core::layout::sided_layout","",8,[[],["result",4]]],[11,"serialize","twm_core::layout","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","twm_core::tile","",11,[[],["result",4]]],[11,"serialize","twm_core::util","",12,[[],["result",4]]],[11,"serialize","twm_core::window","",13,[[],["result",4]]],[11,"serialize","twm_core::workspace","",14,[[],["result",4]]],[11,"deserialize","twm_core::bbox","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","twm_core::display","",5,[[],["result",4]]],[11,"deserialize","twm_core::layout::middle_layout","",15,[[],["result",4]]],[11,"deserialize","twm_core::layout::sided_layout","",8,[[],["result",4]]],[11,"deserialize","twm_core::layout","",6,[[],["result",4]]],[11,"deserialize","twm_core::tile","",11,[[],["result",4]]],[11,"deserialize","twm_core::util","",12,[[],["result",4]]],[11,"deserialize","twm_core::window","",13,[[],["result",4]]],[11,"deserialize","twm_core::workspace","",14,[[],["result",4]]]],"p":[[3,"BBox"],[4,"SplitDirection"],[3,"HorizontalSplit"],[3,"VerticalSplit"],[3,"BBoxBuilder"],[3,"Display"],[3,"LayoutMeta"],[3,"LayoutUpdateInfo"],[3,"SidedLayout"],[8,"Layout"],[3,"Manager"],[3,"Tile"],[4,"Direction"],[3,"Window"],[3,"Workspace"],[3,"MiddleLayout"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);